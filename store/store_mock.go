// Code generated by MockGen. DO NOT EDIT.
// Source: store.go

// Package store is a generated GoMock package.
package store

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGenericInterface is a mock of GenericInterface interface.
type MockGenericInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGenericInterfaceMockRecorder
}

// MockGenericInterfaceMockRecorder is the mock recorder for MockGenericInterface.
type MockGenericInterfaceMockRecorder struct {
	mock *MockGenericInterface
}

// NewMockGenericInterface creates a new mock instance.
func NewMockGenericInterface(ctrl *gomock.Controller) *MockGenericInterface {
	mock := &MockGenericInterface{ctrl: ctrl}
	mock.recorder = &MockGenericInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGenericInterface) EXPECT() *MockGenericInterfaceMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockGenericInterface) Delete(ctx context.Context, key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, key)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockGenericInterfaceMockRecorder) Delete(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockGenericInterface)(nil).Delete), ctx, key)
}

// Get mocks base method.
func (m *MockGenericInterface) Get(ctx context.Context, key string, target any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, key, target)
	ret0, _ := ret[0].(error)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockGenericInterfaceMockRecorder) Get(ctx, key, target interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGenericInterface)(nil).Get), ctx, key, target)
}

// Set mocks base method.
func (m *MockGenericInterface) Set(ctx context.Context, key string, value any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", ctx, key, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockGenericInterfaceMockRecorder) Set(ctx, key, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockGenericInterface)(nil).Set), ctx, key, value)
}

// Update mocks base method.
func (m *MockGenericInterface) Update(ctx context.Context, key string, fn func(func(any) error) (any, error)) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, key, fn)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockGenericInterfaceMockRecorder) Update(ctx, key, fn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockGenericInterface)(nil).Update), ctx, key, fn)
}
